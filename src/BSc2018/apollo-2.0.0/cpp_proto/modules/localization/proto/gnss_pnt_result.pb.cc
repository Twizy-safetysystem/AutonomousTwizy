// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/localization/proto/gnss_pnt_result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/localization/proto/gnss_pnt_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace localization {
class SatDirCosineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SatDirCosine> {
} _SatDirCosine_default_instance_;
class GnssPntResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GnssPntResult> {
} _GnssPntResult_default_instance_;

namespace protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, sat_prn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, sat_sys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, cosine_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, cosine_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SatDirCosine, cosine_z_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, receiver_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, time_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, gnss_week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, gnss_second_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, pnt_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, pos_x_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, pos_y_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, pos_z_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, std_pos_x_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, std_pos_y_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, std_pos_z_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, vel_x_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, vel_y_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, vel_z_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, std_vel_x_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, std_vel_y_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, std_vel_z_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, sovled_sat_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, sat_dir_cosine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, pdop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, hdop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GnssPntResult, vdop_),
  0,
  20,
  1,
  2,
  9,
  3,
  4,
  5,
  6,
  7,
  8,
  11,
  12,
  13,
  14,
  15,
  16,
  10,
  ~0u,
  17,
  18,
  19,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(SatDirCosine)},
  { 15, 42, sizeof(GnssPntResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SatDirCosine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GnssPntResult_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/localization/proto/gnss_pnt_result.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _SatDirCosine_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _GnssPntResult_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::apollo::drivers::gnss::protobuf_modules_2fdrivers_2fgnss_2fproto_2fgnss_5fraw_5fobservation_2eproto::InitDefaults();
  _SatDirCosine_default_instance_.DefaultConstruct();
  _GnssPntResult_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n0modules/localization/proto/gnss_pnt_re"
      "sult.proto\022\023apollo.localization\0325modules"
      "/drivers/gnss/proto/gnss_raw_observation"
      ".proto\"f\n\014SatDirCosine\022\017\n\007sat_prn\030\001 \001(\r\022"
      "\017\n\007sat_sys\030\002 \001(\r\022\020\n\010cosine_x\030\003 \001(\001\022\020\n\010co"
      "sine_y\030\004 \001(\001\022\020\n\010cosine_z\030\005 \001(\001\"\254\004\n\rGnssP"
      "ntResult\022\023\n\013receiver_id\030\001 \001(\r\022>\n\ttime_ty"
      "pe\030\002 \001(\0162!.apollo.drivers.gnss.GnssTimeT"
      "ype:\010GPS_TIME\022\021\n\tgnss_week\030\003 \001(\r\022\025\n\rgnss"
      "_second_s\030\004 \001(\001\022;\n\010pnt_type\030\005 \001(\0162\034.apol"
      "lo.localization.PntType:\013PNT_INVALID\022\017\n\007"
      "pos_x_m\030\006 \001(\001\022\017\n\007pos_y_m\030\007 \001(\001\022\017\n\007pos_z_"
      "m\030\010 \001(\001\022\023\n\013std_pos_x_m\030\t \001(\001\022\023\n\013std_pos_"
      "y_m\030\n \001(\001\022\023\n\013std_pos_z_m\030\013 \001(\001\022\017\n\007vel_x_"
      "m\030\014 \001(\001\022\017\n\007vel_y_m\030\r \001(\001\022\017\n\007vel_z_m\030\016 \001("
      "\001\022\023\n\013std_vel_x_m\030\017 \001(\001\022\023\n\013std_vel_y_m\030\020 "
      "\001(\001\022\023\n\013std_vel_z_m\030\021 \001(\001\022\026\n\016sovled_sat_n"
      "um\030\022 \001(\r\0229\n\016sat_dir_cosine\030\023 \003(\0132!.apoll"
      "o.localization.SatDirCosine\022\014\n\004pdop\030\024 \001("
      "\001\022\014\n\004hdop\030\025 \001(\001\022\014\n\004vdop\030\026 \001(\001*r\n\007PntType"
      "\022\017\n\013PNT_INVALID\020\000\022\013\n\007PNT_SPP\020\001\022\020\n\014PNT_PH"
      "ASE_TD\020\002\022\021\n\rPNT_CODE_DIFF\020\003\022\021\n\rPNT_RTK_F"
      "LOAT\020\004\022\021\n\rPNT_RTK_FIXED\020\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 905);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/localization/proto/gnss_pnt_result.proto", &protobuf_RegisterTypes);
  ::apollo::drivers::gnss::protobuf_modules_2fdrivers_2fgnss_2fproto_2fgnss_5fraw_5fobservation_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto

const ::google::protobuf::EnumDescriptor* PntType_descriptor() {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::file_level_enum_descriptors[0];
}
bool PntType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SatDirCosine::kSatPrnFieldNumber;
const int SatDirCosine::kSatSysFieldNumber;
const int SatDirCosine::kCosineXFieldNumber;
const int SatDirCosine::kCosineYFieldNumber;
const int SatDirCosine::kCosineZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SatDirCosine::SatDirCosine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.localization.SatDirCosine)
}
SatDirCosine::SatDirCosine(const SatDirCosine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sat_prn_, &from.sat_prn_,
    reinterpret_cast<char*>(&cosine_z_) -
    reinterpret_cast<char*>(&sat_prn_) + sizeof(cosine_z_));
  // @@protoc_insertion_point(copy_constructor:apollo.localization.SatDirCosine)
}

void SatDirCosine::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sat_prn_, 0, reinterpret_cast<char*>(&cosine_z_) -
    reinterpret_cast<char*>(&sat_prn_) + sizeof(cosine_z_));
}

SatDirCosine::~SatDirCosine() {
  // @@protoc_insertion_point(destructor:apollo.localization.SatDirCosine)
  SharedDtor();
}

void SatDirCosine::SharedDtor() {
}

void SatDirCosine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SatDirCosine::descriptor() {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SatDirCosine& SatDirCosine::default_instance() {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

SatDirCosine* SatDirCosine::New(::google::protobuf::Arena* arena) const {
  SatDirCosine* n = new SatDirCosine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SatDirCosine::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.SatDirCosine)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&sat_prn_, 0, reinterpret_cast<char*>(&cosine_z_) -
      reinterpret_cast<char*>(&sat_prn_) + sizeof(cosine_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SatDirCosine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.localization.SatDirCosine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sat_prn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_sat_prn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sat_prn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sat_sys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_sat_sys();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sat_sys_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double cosine_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_cosine_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cosine_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double cosine_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_cosine_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cosine_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double cosine_z = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_cosine_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cosine_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.localization.SatDirCosine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.localization.SatDirCosine)
  return false;
#undef DO_
}

void SatDirCosine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.localization.SatDirCosine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sat_prn = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sat_prn(), output);
  }

  // optional uint32 sat_sys = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sat_sys(), output);
  }

  // optional double cosine_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->cosine_x(), output);
  }

  // optional double cosine_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->cosine_y(), output);
  }

  // optional double cosine_z = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->cosine_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.localization.SatDirCosine)
}

::google::protobuf::uint8* SatDirCosine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.SatDirCosine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sat_prn = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sat_prn(), target);
  }

  // optional uint32 sat_sys = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sat_sys(), target);
  }

  // optional double cosine_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->cosine_x(), target);
  }

  // optional double cosine_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->cosine_y(), target);
  }

  // optional double cosine_z = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->cosine_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.SatDirCosine)
  return target;
}

size_t SatDirCosine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.SatDirCosine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 sat_prn = 1;
    if (has_sat_prn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sat_prn());
    }

    // optional uint32 sat_sys = 2;
    if (has_sat_sys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sat_sys());
    }

    // optional double cosine_x = 3;
    if (has_cosine_x()) {
      total_size += 1 + 8;
    }

    // optional double cosine_y = 4;
    if (has_cosine_y()) {
      total_size += 1 + 8;
    }

    // optional double cosine_z = 5;
    if (has_cosine_z()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SatDirCosine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.localization.SatDirCosine)
  GOOGLE_DCHECK_NE(&from, this);
  const SatDirCosine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SatDirCosine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.localization.SatDirCosine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.localization.SatDirCosine)
    MergeFrom(*source);
  }
}

void SatDirCosine::MergeFrom(const SatDirCosine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.SatDirCosine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      sat_prn_ = from.sat_prn_;
    }
    if (cached_has_bits & 0x00000002u) {
      sat_sys_ = from.sat_sys_;
    }
    if (cached_has_bits & 0x00000004u) {
      cosine_x_ = from.cosine_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      cosine_y_ = from.cosine_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      cosine_z_ = from.cosine_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SatDirCosine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.localization.SatDirCosine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SatDirCosine::CopyFrom(const SatDirCosine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.SatDirCosine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SatDirCosine::IsInitialized() const {
  return true;
}

void SatDirCosine::Swap(SatDirCosine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SatDirCosine::InternalSwap(SatDirCosine* other) {
  std::swap(sat_prn_, other->sat_prn_);
  std::swap(sat_sys_, other->sat_sys_);
  std::swap(cosine_x_, other->cosine_x_);
  std::swap(cosine_y_, other->cosine_y_);
  std::swap(cosine_z_, other->cosine_z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SatDirCosine::GetMetadata() const {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SatDirCosine

// optional uint32 sat_prn = 1;
bool SatDirCosine::has_sat_prn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SatDirCosine::set_has_sat_prn() {
  _has_bits_[0] |= 0x00000001u;
}
void SatDirCosine::clear_has_sat_prn() {
  _has_bits_[0] &= ~0x00000001u;
}
void SatDirCosine::clear_sat_prn() {
  sat_prn_ = 0u;
  clear_has_sat_prn();
}
::google::protobuf::uint32 SatDirCosine::sat_prn() const {
  // @@protoc_insertion_point(field_get:apollo.localization.SatDirCosine.sat_prn)
  return sat_prn_;
}
void SatDirCosine::set_sat_prn(::google::protobuf::uint32 value) {
  set_has_sat_prn();
  sat_prn_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.SatDirCosine.sat_prn)
}

// optional uint32 sat_sys = 2;
bool SatDirCosine::has_sat_sys() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SatDirCosine::set_has_sat_sys() {
  _has_bits_[0] |= 0x00000002u;
}
void SatDirCosine::clear_has_sat_sys() {
  _has_bits_[0] &= ~0x00000002u;
}
void SatDirCosine::clear_sat_sys() {
  sat_sys_ = 0u;
  clear_has_sat_sys();
}
::google::protobuf::uint32 SatDirCosine::sat_sys() const {
  // @@protoc_insertion_point(field_get:apollo.localization.SatDirCosine.sat_sys)
  return sat_sys_;
}
void SatDirCosine::set_sat_sys(::google::protobuf::uint32 value) {
  set_has_sat_sys();
  sat_sys_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.SatDirCosine.sat_sys)
}

// optional double cosine_x = 3;
bool SatDirCosine::has_cosine_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SatDirCosine::set_has_cosine_x() {
  _has_bits_[0] |= 0x00000004u;
}
void SatDirCosine::clear_has_cosine_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void SatDirCosine::clear_cosine_x() {
  cosine_x_ = 0;
  clear_has_cosine_x();
}
double SatDirCosine::cosine_x() const {
  // @@protoc_insertion_point(field_get:apollo.localization.SatDirCosine.cosine_x)
  return cosine_x_;
}
void SatDirCosine::set_cosine_x(double value) {
  set_has_cosine_x();
  cosine_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.SatDirCosine.cosine_x)
}

// optional double cosine_y = 4;
bool SatDirCosine::has_cosine_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SatDirCosine::set_has_cosine_y() {
  _has_bits_[0] |= 0x00000008u;
}
void SatDirCosine::clear_has_cosine_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void SatDirCosine::clear_cosine_y() {
  cosine_y_ = 0;
  clear_has_cosine_y();
}
double SatDirCosine::cosine_y() const {
  // @@protoc_insertion_point(field_get:apollo.localization.SatDirCosine.cosine_y)
  return cosine_y_;
}
void SatDirCosine::set_cosine_y(double value) {
  set_has_cosine_y();
  cosine_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.SatDirCosine.cosine_y)
}

// optional double cosine_z = 5;
bool SatDirCosine::has_cosine_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SatDirCosine::set_has_cosine_z() {
  _has_bits_[0] |= 0x00000010u;
}
void SatDirCosine::clear_has_cosine_z() {
  _has_bits_[0] &= ~0x00000010u;
}
void SatDirCosine::clear_cosine_z() {
  cosine_z_ = 0;
  clear_has_cosine_z();
}
double SatDirCosine::cosine_z() const {
  // @@protoc_insertion_point(field_get:apollo.localization.SatDirCosine.cosine_z)
  return cosine_z_;
}
void SatDirCosine::set_cosine_z(double value) {
  set_has_cosine_z();
  cosine_z_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.SatDirCosine.cosine_z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GnssPntResult::kReceiverIdFieldNumber;
const int GnssPntResult::kTimeTypeFieldNumber;
const int GnssPntResult::kGnssWeekFieldNumber;
const int GnssPntResult::kGnssSecondSFieldNumber;
const int GnssPntResult::kPntTypeFieldNumber;
const int GnssPntResult::kPosXMFieldNumber;
const int GnssPntResult::kPosYMFieldNumber;
const int GnssPntResult::kPosZMFieldNumber;
const int GnssPntResult::kStdPosXMFieldNumber;
const int GnssPntResult::kStdPosYMFieldNumber;
const int GnssPntResult::kStdPosZMFieldNumber;
const int GnssPntResult::kVelXMFieldNumber;
const int GnssPntResult::kVelYMFieldNumber;
const int GnssPntResult::kVelZMFieldNumber;
const int GnssPntResult::kStdVelXMFieldNumber;
const int GnssPntResult::kStdVelYMFieldNumber;
const int GnssPntResult::kStdVelZMFieldNumber;
const int GnssPntResult::kSovledSatNumFieldNumber;
const int GnssPntResult::kSatDirCosineFieldNumber;
const int GnssPntResult::kPdopFieldNumber;
const int GnssPntResult::kHdopFieldNumber;
const int GnssPntResult::kVdopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GnssPntResult::GnssPntResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.localization.GnssPntResult)
}
GnssPntResult::GnssPntResult(const GnssPntResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sat_dir_cosine_(from.sat_dir_cosine_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&receiver_id_, &from.receiver_id_,
    reinterpret_cast<char*>(&time_type_) -
    reinterpret_cast<char*>(&receiver_id_) + sizeof(time_type_));
  // @@protoc_insertion_point(copy_constructor:apollo.localization.GnssPntResult)
}

void GnssPntResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&receiver_id_, 0, reinterpret_cast<char*>(&vdop_) -
    reinterpret_cast<char*>(&receiver_id_) + sizeof(vdop_));
  time_type_ = 1;
}

GnssPntResult::~GnssPntResult() {
  // @@protoc_insertion_point(destructor:apollo.localization.GnssPntResult)
  SharedDtor();
}

void GnssPntResult::SharedDtor() {
}

void GnssPntResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GnssPntResult::descriptor() {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GnssPntResult& GnssPntResult::default_instance() {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

GnssPntResult* GnssPntResult::New(::google::protobuf::Arena* arena) const {
  GnssPntResult* n = new GnssPntResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GnssPntResult::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.GnssPntResult)
  sat_dir_cosine_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&receiver_id_, 0, reinterpret_cast<char*>(&std_pos_y_m_) -
      reinterpret_cast<char*>(&receiver_id_) + sizeof(std_pos_y_m_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&std_pos_z_m_, 0, reinterpret_cast<char*>(&std_vel_y_m_) -
      reinterpret_cast<char*>(&std_pos_z_m_) + sizeof(std_vel_y_m_));
  }
  if (_has_bits_[16 / 32] & 2031616u) {
    ::memset(&std_vel_z_m_, 0, reinterpret_cast<char*>(&vdop_) -
      reinterpret_cast<char*>(&std_vel_z_m_) + sizeof(vdop_));
    time_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GnssPntResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.localization.GnssPntResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 receiver_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_receiver_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receiver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.drivers.gnss.GnssTimeType time_type = 2 [default = GPS_TIME];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::drivers::gnss::GnssTimeType_IsValid(value)) {
            set_time_type(static_cast< ::apollo::drivers::gnss::GnssTimeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gnss_week = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_gnss_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gnss_week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double gnss_second_s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_gnss_second_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_second_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.localization.PntType pnt_type = 5 [default = PNT_INVALID];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::localization::PntType_IsValid(value)) {
            set_pnt_type(static_cast< ::apollo::localization::PntType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pos_x_m = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_pos_x_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pos_x_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pos_y_m = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_pos_y_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pos_y_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pos_z_m = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_pos_z_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pos_z_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double std_pos_x_m = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_std_pos_x_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &std_pos_x_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double std_pos_y_m = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_std_pos_y_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &std_pos_y_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double std_pos_z_m = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u)) {
          set_has_std_pos_z_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &std_pos_z_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vel_x_m = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u)) {
          set_has_vel_x_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vel_x_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vel_y_m = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u)) {
          set_has_vel_y_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vel_y_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vel_z_m = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u)) {
          set_has_vel_z_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vel_z_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double std_vel_x_m = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u)) {
          set_has_std_vel_x_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &std_vel_x_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double std_vel_y_m = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u)) {
          set_has_std_vel_y_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &std_vel_y_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double std_vel_z_m = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u)) {
          set_has_std_vel_z_m();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &std_vel_z_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sovled_sat_num = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has_sovled_sat_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sovled_sat_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.localization.SatDirCosine sat_dir_cosine = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sat_dir_cosine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pdop = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u)) {
          set_has_pdop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double hdop = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u)) {
          set_has_hdop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vdop = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u)) {
          set_has_vdop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.localization.GnssPntResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.localization.GnssPntResult)
  return false;
#undef DO_
}

void GnssPntResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.localization.GnssPntResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 receiver_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->receiver_id(), output);
  }

  // optional .apollo.drivers.gnss.GnssTimeType time_type = 2 [default = GPS_TIME];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->time_type(), output);
  }

  // optional uint32 gnss_week = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gnss_week(), output);
  }

  // optional double gnss_second_s = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->gnss_second_s(), output);
  }

  // optional .apollo.localization.PntType pnt_type = 5 [default = PNT_INVALID];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->pnt_type(), output);
  }

  // optional double pos_x_m = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pos_x_m(), output);
  }

  // optional double pos_y_m = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pos_y_m(), output);
  }

  // optional double pos_z_m = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->pos_z_m(), output);
  }

  // optional double std_pos_x_m = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->std_pos_x_m(), output);
  }

  // optional double std_pos_y_m = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->std_pos_y_m(), output);
  }

  // optional double std_pos_z_m = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->std_pos_z_m(), output);
  }

  // optional double vel_x_m = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->vel_x_m(), output);
  }

  // optional double vel_y_m = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->vel_y_m(), output);
  }

  // optional double vel_z_m = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->vel_z_m(), output);
  }

  // optional double std_vel_x_m = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->std_vel_x_m(), output);
  }

  // optional double std_vel_y_m = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->std_vel_y_m(), output);
  }

  // optional double std_vel_z_m = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->std_vel_z_m(), output);
  }

  // optional uint32 sovled_sat_num = 18;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->sovled_sat_num(), output);
  }

  // repeated .apollo.localization.SatDirCosine sat_dir_cosine = 19;
  for (unsigned int i = 0, n = this->sat_dir_cosine_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->sat_dir_cosine(i), output);
  }

  // optional double pdop = 20;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->pdop(), output);
  }

  // optional double hdop = 21;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->hdop(), output);
  }

  // optional double vdop = 22;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->vdop(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.localization.GnssPntResult)
}

::google::protobuf::uint8* GnssPntResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.GnssPntResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 receiver_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->receiver_id(), target);
  }

  // optional .apollo.drivers.gnss.GnssTimeType time_type = 2 [default = GPS_TIME];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->time_type(), target);
  }

  // optional uint32 gnss_week = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gnss_week(), target);
  }

  // optional double gnss_second_s = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->gnss_second_s(), target);
  }

  // optional .apollo.localization.PntType pnt_type = 5 [default = PNT_INVALID];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->pnt_type(), target);
  }

  // optional double pos_x_m = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->pos_x_m(), target);
  }

  // optional double pos_y_m = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->pos_y_m(), target);
  }

  // optional double pos_z_m = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->pos_z_m(), target);
  }

  // optional double std_pos_x_m = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->std_pos_x_m(), target);
  }

  // optional double std_pos_y_m = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->std_pos_y_m(), target);
  }

  // optional double std_pos_z_m = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->std_pos_z_m(), target);
  }

  // optional double vel_x_m = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->vel_x_m(), target);
  }

  // optional double vel_y_m = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->vel_y_m(), target);
  }

  // optional double vel_z_m = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->vel_z_m(), target);
  }

  // optional double std_vel_x_m = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->std_vel_x_m(), target);
  }

  // optional double std_vel_y_m = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->std_vel_y_m(), target);
  }

  // optional double std_vel_z_m = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->std_vel_z_m(), target);
  }

  // optional uint32 sovled_sat_num = 18;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->sovled_sat_num(), target);
  }

  // repeated .apollo.localization.SatDirCosine sat_dir_cosine = 19;
  for (unsigned int i = 0, n = this->sat_dir_cosine_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, this->sat_dir_cosine(i), deterministic, target);
  }

  // optional double pdop = 20;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->pdop(), target);
  }

  // optional double hdop = 21;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->hdop(), target);
  }

  // optional double vdop = 22;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->vdop(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.GnssPntResult)
  return target;
}

size_t GnssPntResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.GnssPntResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.localization.SatDirCosine sat_dir_cosine = 19;
  {
    unsigned int count = this->sat_dir_cosine_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sat_dir_cosine(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 receiver_id = 1;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receiver_id());
    }

    // optional uint32 gnss_week = 3;
    if (has_gnss_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gnss_week());
    }

    // optional double gnss_second_s = 4;
    if (has_gnss_second_s()) {
      total_size += 1 + 8;
    }

    // optional double pos_x_m = 6;
    if (has_pos_x_m()) {
      total_size += 1 + 8;
    }

    // optional double pos_y_m = 7;
    if (has_pos_y_m()) {
      total_size += 1 + 8;
    }

    // optional double pos_z_m = 8;
    if (has_pos_z_m()) {
      total_size += 1 + 8;
    }

    // optional double std_pos_x_m = 9;
    if (has_std_pos_x_m()) {
      total_size += 1 + 8;
    }

    // optional double std_pos_y_m = 10;
    if (has_std_pos_y_m()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional double std_pos_z_m = 11;
    if (has_std_pos_z_m()) {
      total_size += 1 + 8;
    }

    // optional .apollo.localization.PntType pnt_type = 5 [default = PNT_INVALID];
    if (has_pnt_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pnt_type());
    }

    // optional uint32 sovled_sat_num = 18;
    if (has_sovled_sat_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sovled_sat_num());
    }

    // optional double vel_x_m = 12;
    if (has_vel_x_m()) {
      total_size += 1 + 8;
    }

    // optional double vel_y_m = 13;
    if (has_vel_y_m()) {
      total_size += 1 + 8;
    }

    // optional double vel_z_m = 14;
    if (has_vel_z_m()) {
      total_size += 1 + 8;
    }

    // optional double std_vel_x_m = 15;
    if (has_std_vel_x_m()) {
      total_size += 1 + 8;
    }

    // optional double std_vel_y_m = 16;
    if (has_std_vel_y_m()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional double std_vel_z_m = 17;
    if (has_std_vel_z_m()) {
      total_size += 2 + 8;
    }

    // optional double pdop = 20;
    if (has_pdop()) {
      total_size += 2 + 8;
    }

    // optional double hdop = 21;
    if (has_hdop()) {
      total_size += 2 + 8;
    }

    // optional double vdop = 22;
    if (has_vdop()) {
      total_size += 2 + 8;
    }

    // optional .apollo.drivers.gnss.GnssTimeType time_type = 2 [default = GPS_TIME];
    if (has_time_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->time_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GnssPntResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.localization.GnssPntResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GnssPntResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GnssPntResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.localization.GnssPntResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.localization.GnssPntResult)
    MergeFrom(*source);
  }
}

void GnssPntResult::MergeFrom(const GnssPntResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.GnssPntResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sat_dir_cosine_.MergeFrom(from.sat_dir_cosine_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      receiver_id_ = from.receiver_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      gnss_week_ = from.gnss_week_;
    }
    if (cached_has_bits & 0x00000004u) {
      gnss_second_s_ = from.gnss_second_s_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_x_m_ = from.pos_x_m_;
    }
    if (cached_has_bits & 0x00000010u) {
      pos_y_m_ = from.pos_y_m_;
    }
    if (cached_has_bits & 0x00000020u) {
      pos_z_m_ = from.pos_z_m_;
    }
    if (cached_has_bits & 0x00000040u) {
      std_pos_x_m_ = from.std_pos_x_m_;
    }
    if (cached_has_bits & 0x00000080u) {
      std_pos_y_m_ = from.std_pos_y_m_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      std_pos_z_m_ = from.std_pos_z_m_;
    }
    if (cached_has_bits & 0x00000200u) {
      pnt_type_ = from.pnt_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      sovled_sat_num_ = from.sovled_sat_num_;
    }
    if (cached_has_bits & 0x00000800u) {
      vel_x_m_ = from.vel_x_m_;
    }
    if (cached_has_bits & 0x00001000u) {
      vel_y_m_ = from.vel_y_m_;
    }
    if (cached_has_bits & 0x00002000u) {
      vel_z_m_ = from.vel_z_m_;
    }
    if (cached_has_bits & 0x00004000u) {
      std_vel_x_m_ = from.std_vel_x_m_;
    }
    if (cached_has_bits & 0x00008000u) {
      std_vel_y_m_ = from.std_vel_y_m_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      std_vel_z_m_ = from.std_vel_z_m_;
    }
    if (cached_has_bits & 0x00020000u) {
      pdop_ = from.pdop_;
    }
    if (cached_has_bits & 0x00040000u) {
      hdop_ = from.hdop_;
    }
    if (cached_has_bits & 0x00080000u) {
      vdop_ = from.vdop_;
    }
    if (cached_has_bits & 0x00100000u) {
      time_type_ = from.time_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GnssPntResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.localization.GnssPntResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GnssPntResult::CopyFrom(const GnssPntResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.GnssPntResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GnssPntResult::IsInitialized() const {
  return true;
}

void GnssPntResult::Swap(GnssPntResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GnssPntResult::InternalSwap(GnssPntResult* other) {
  sat_dir_cosine_.InternalSwap(&other->sat_dir_cosine_);
  std::swap(receiver_id_, other->receiver_id_);
  std::swap(gnss_week_, other->gnss_week_);
  std::swap(gnss_second_s_, other->gnss_second_s_);
  std::swap(pos_x_m_, other->pos_x_m_);
  std::swap(pos_y_m_, other->pos_y_m_);
  std::swap(pos_z_m_, other->pos_z_m_);
  std::swap(std_pos_x_m_, other->std_pos_x_m_);
  std::swap(std_pos_y_m_, other->std_pos_y_m_);
  std::swap(std_pos_z_m_, other->std_pos_z_m_);
  std::swap(pnt_type_, other->pnt_type_);
  std::swap(sovled_sat_num_, other->sovled_sat_num_);
  std::swap(vel_x_m_, other->vel_x_m_);
  std::swap(vel_y_m_, other->vel_y_m_);
  std::swap(vel_z_m_, other->vel_z_m_);
  std::swap(std_vel_x_m_, other->std_vel_x_m_);
  std::swap(std_vel_y_m_, other->std_vel_y_m_);
  std::swap(std_vel_z_m_, other->std_vel_z_m_);
  std::swap(pdop_, other->pdop_);
  std::swap(hdop_, other->hdop_);
  std::swap(vdop_, other->vdop_);
  std::swap(time_type_, other->time_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GnssPntResult::GetMetadata() const {
  protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2flocalization_2fproto_2fgnss_5fpnt_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GnssPntResult

// optional uint32 receiver_id = 1;
bool GnssPntResult::has_receiver_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GnssPntResult::set_has_receiver_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GnssPntResult::clear_has_receiver_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GnssPntResult::clear_receiver_id() {
  receiver_id_ = 0u;
  clear_has_receiver_id();
}
::google::protobuf::uint32 GnssPntResult::receiver_id() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.receiver_id)
  return receiver_id_;
}
void GnssPntResult::set_receiver_id(::google::protobuf::uint32 value) {
  set_has_receiver_id();
  receiver_id_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.receiver_id)
}

// optional .apollo.drivers.gnss.GnssTimeType time_type = 2 [default = GPS_TIME];
bool GnssPntResult::has_time_type() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void GnssPntResult::set_has_time_type() {
  _has_bits_[0] |= 0x00100000u;
}
void GnssPntResult::clear_has_time_type() {
  _has_bits_[0] &= ~0x00100000u;
}
void GnssPntResult::clear_time_type() {
  time_type_ = 1;
  clear_has_time_type();
}
::apollo::drivers::gnss::GnssTimeType GnssPntResult::time_type() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.time_type)
  return static_cast< ::apollo::drivers::gnss::GnssTimeType >(time_type_);
}
void GnssPntResult::set_time_type(::apollo::drivers::gnss::GnssTimeType value) {
  assert(::apollo::drivers::gnss::GnssTimeType_IsValid(value));
  set_has_time_type();
  time_type_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.time_type)
}

// optional uint32 gnss_week = 3;
bool GnssPntResult::has_gnss_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GnssPntResult::set_has_gnss_week() {
  _has_bits_[0] |= 0x00000002u;
}
void GnssPntResult::clear_has_gnss_week() {
  _has_bits_[0] &= ~0x00000002u;
}
void GnssPntResult::clear_gnss_week() {
  gnss_week_ = 0u;
  clear_has_gnss_week();
}
::google::protobuf::uint32 GnssPntResult::gnss_week() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.gnss_week)
  return gnss_week_;
}
void GnssPntResult::set_gnss_week(::google::protobuf::uint32 value) {
  set_has_gnss_week();
  gnss_week_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.gnss_week)
}

// optional double gnss_second_s = 4;
bool GnssPntResult::has_gnss_second_s() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GnssPntResult::set_has_gnss_second_s() {
  _has_bits_[0] |= 0x00000004u;
}
void GnssPntResult::clear_has_gnss_second_s() {
  _has_bits_[0] &= ~0x00000004u;
}
void GnssPntResult::clear_gnss_second_s() {
  gnss_second_s_ = 0;
  clear_has_gnss_second_s();
}
double GnssPntResult::gnss_second_s() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.gnss_second_s)
  return gnss_second_s_;
}
void GnssPntResult::set_gnss_second_s(double value) {
  set_has_gnss_second_s();
  gnss_second_s_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.gnss_second_s)
}

// optional .apollo.localization.PntType pnt_type = 5 [default = PNT_INVALID];
bool GnssPntResult::has_pnt_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GnssPntResult::set_has_pnt_type() {
  _has_bits_[0] |= 0x00000200u;
}
void GnssPntResult::clear_has_pnt_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void GnssPntResult::clear_pnt_type() {
  pnt_type_ = 0;
  clear_has_pnt_type();
}
::apollo::localization::PntType GnssPntResult::pnt_type() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.pnt_type)
  return static_cast< ::apollo::localization::PntType >(pnt_type_);
}
void GnssPntResult::set_pnt_type(::apollo::localization::PntType value) {
  assert(::apollo::localization::PntType_IsValid(value));
  set_has_pnt_type();
  pnt_type_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.pnt_type)
}

// optional double pos_x_m = 6;
bool GnssPntResult::has_pos_x_m() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GnssPntResult::set_has_pos_x_m() {
  _has_bits_[0] |= 0x00000008u;
}
void GnssPntResult::clear_has_pos_x_m() {
  _has_bits_[0] &= ~0x00000008u;
}
void GnssPntResult::clear_pos_x_m() {
  pos_x_m_ = 0;
  clear_has_pos_x_m();
}
double GnssPntResult::pos_x_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.pos_x_m)
  return pos_x_m_;
}
void GnssPntResult::set_pos_x_m(double value) {
  set_has_pos_x_m();
  pos_x_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.pos_x_m)
}

// optional double pos_y_m = 7;
bool GnssPntResult::has_pos_y_m() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GnssPntResult::set_has_pos_y_m() {
  _has_bits_[0] |= 0x00000010u;
}
void GnssPntResult::clear_has_pos_y_m() {
  _has_bits_[0] &= ~0x00000010u;
}
void GnssPntResult::clear_pos_y_m() {
  pos_y_m_ = 0;
  clear_has_pos_y_m();
}
double GnssPntResult::pos_y_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.pos_y_m)
  return pos_y_m_;
}
void GnssPntResult::set_pos_y_m(double value) {
  set_has_pos_y_m();
  pos_y_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.pos_y_m)
}

// optional double pos_z_m = 8;
bool GnssPntResult::has_pos_z_m() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GnssPntResult::set_has_pos_z_m() {
  _has_bits_[0] |= 0x00000020u;
}
void GnssPntResult::clear_has_pos_z_m() {
  _has_bits_[0] &= ~0x00000020u;
}
void GnssPntResult::clear_pos_z_m() {
  pos_z_m_ = 0;
  clear_has_pos_z_m();
}
double GnssPntResult::pos_z_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.pos_z_m)
  return pos_z_m_;
}
void GnssPntResult::set_pos_z_m(double value) {
  set_has_pos_z_m();
  pos_z_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.pos_z_m)
}

// optional double std_pos_x_m = 9;
bool GnssPntResult::has_std_pos_x_m() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GnssPntResult::set_has_std_pos_x_m() {
  _has_bits_[0] |= 0x00000040u;
}
void GnssPntResult::clear_has_std_pos_x_m() {
  _has_bits_[0] &= ~0x00000040u;
}
void GnssPntResult::clear_std_pos_x_m() {
  std_pos_x_m_ = 0;
  clear_has_std_pos_x_m();
}
double GnssPntResult::std_pos_x_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.std_pos_x_m)
  return std_pos_x_m_;
}
void GnssPntResult::set_std_pos_x_m(double value) {
  set_has_std_pos_x_m();
  std_pos_x_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.std_pos_x_m)
}

// optional double std_pos_y_m = 10;
bool GnssPntResult::has_std_pos_y_m() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GnssPntResult::set_has_std_pos_y_m() {
  _has_bits_[0] |= 0x00000080u;
}
void GnssPntResult::clear_has_std_pos_y_m() {
  _has_bits_[0] &= ~0x00000080u;
}
void GnssPntResult::clear_std_pos_y_m() {
  std_pos_y_m_ = 0;
  clear_has_std_pos_y_m();
}
double GnssPntResult::std_pos_y_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.std_pos_y_m)
  return std_pos_y_m_;
}
void GnssPntResult::set_std_pos_y_m(double value) {
  set_has_std_pos_y_m();
  std_pos_y_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.std_pos_y_m)
}

// optional double std_pos_z_m = 11;
bool GnssPntResult::has_std_pos_z_m() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GnssPntResult::set_has_std_pos_z_m() {
  _has_bits_[0] |= 0x00000100u;
}
void GnssPntResult::clear_has_std_pos_z_m() {
  _has_bits_[0] &= ~0x00000100u;
}
void GnssPntResult::clear_std_pos_z_m() {
  std_pos_z_m_ = 0;
  clear_has_std_pos_z_m();
}
double GnssPntResult::std_pos_z_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.std_pos_z_m)
  return std_pos_z_m_;
}
void GnssPntResult::set_std_pos_z_m(double value) {
  set_has_std_pos_z_m();
  std_pos_z_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.std_pos_z_m)
}

// optional double vel_x_m = 12;
bool GnssPntResult::has_vel_x_m() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GnssPntResult::set_has_vel_x_m() {
  _has_bits_[0] |= 0x00000800u;
}
void GnssPntResult::clear_has_vel_x_m() {
  _has_bits_[0] &= ~0x00000800u;
}
void GnssPntResult::clear_vel_x_m() {
  vel_x_m_ = 0;
  clear_has_vel_x_m();
}
double GnssPntResult::vel_x_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.vel_x_m)
  return vel_x_m_;
}
void GnssPntResult::set_vel_x_m(double value) {
  set_has_vel_x_m();
  vel_x_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.vel_x_m)
}

// optional double vel_y_m = 13;
bool GnssPntResult::has_vel_y_m() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GnssPntResult::set_has_vel_y_m() {
  _has_bits_[0] |= 0x00001000u;
}
void GnssPntResult::clear_has_vel_y_m() {
  _has_bits_[0] &= ~0x00001000u;
}
void GnssPntResult::clear_vel_y_m() {
  vel_y_m_ = 0;
  clear_has_vel_y_m();
}
double GnssPntResult::vel_y_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.vel_y_m)
  return vel_y_m_;
}
void GnssPntResult::set_vel_y_m(double value) {
  set_has_vel_y_m();
  vel_y_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.vel_y_m)
}

// optional double vel_z_m = 14;
bool GnssPntResult::has_vel_z_m() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GnssPntResult::set_has_vel_z_m() {
  _has_bits_[0] |= 0x00002000u;
}
void GnssPntResult::clear_has_vel_z_m() {
  _has_bits_[0] &= ~0x00002000u;
}
void GnssPntResult::clear_vel_z_m() {
  vel_z_m_ = 0;
  clear_has_vel_z_m();
}
double GnssPntResult::vel_z_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.vel_z_m)
  return vel_z_m_;
}
void GnssPntResult::set_vel_z_m(double value) {
  set_has_vel_z_m();
  vel_z_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.vel_z_m)
}

// optional double std_vel_x_m = 15;
bool GnssPntResult::has_std_vel_x_m() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GnssPntResult::set_has_std_vel_x_m() {
  _has_bits_[0] |= 0x00004000u;
}
void GnssPntResult::clear_has_std_vel_x_m() {
  _has_bits_[0] &= ~0x00004000u;
}
void GnssPntResult::clear_std_vel_x_m() {
  std_vel_x_m_ = 0;
  clear_has_std_vel_x_m();
}
double GnssPntResult::std_vel_x_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.std_vel_x_m)
  return std_vel_x_m_;
}
void GnssPntResult::set_std_vel_x_m(double value) {
  set_has_std_vel_x_m();
  std_vel_x_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.std_vel_x_m)
}

// optional double std_vel_y_m = 16;
bool GnssPntResult::has_std_vel_y_m() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GnssPntResult::set_has_std_vel_y_m() {
  _has_bits_[0] |= 0x00008000u;
}
void GnssPntResult::clear_has_std_vel_y_m() {
  _has_bits_[0] &= ~0x00008000u;
}
void GnssPntResult::clear_std_vel_y_m() {
  std_vel_y_m_ = 0;
  clear_has_std_vel_y_m();
}
double GnssPntResult::std_vel_y_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.std_vel_y_m)
  return std_vel_y_m_;
}
void GnssPntResult::set_std_vel_y_m(double value) {
  set_has_std_vel_y_m();
  std_vel_y_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.std_vel_y_m)
}

// optional double std_vel_z_m = 17;
bool GnssPntResult::has_std_vel_z_m() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void GnssPntResult::set_has_std_vel_z_m() {
  _has_bits_[0] |= 0x00010000u;
}
void GnssPntResult::clear_has_std_vel_z_m() {
  _has_bits_[0] &= ~0x00010000u;
}
void GnssPntResult::clear_std_vel_z_m() {
  std_vel_z_m_ = 0;
  clear_has_std_vel_z_m();
}
double GnssPntResult::std_vel_z_m() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.std_vel_z_m)
  return std_vel_z_m_;
}
void GnssPntResult::set_std_vel_z_m(double value) {
  set_has_std_vel_z_m();
  std_vel_z_m_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.std_vel_z_m)
}

// optional uint32 sovled_sat_num = 18;
bool GnssPntResult::has_sovled_sat_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GnssPntResult::set_has_sovled_sat_num() {
  _has_bits_[0] |= 0x00000400u;
}
void GnssPntResult::clear_has_sovled_sat_num() {
  _has_bits_[0] &= ~0x00000400u;
}
void GnssPntResult::clear_sovled_sat_num() {
  sovled_sat_num_ = 0u;
  clear_has_sovled_sat_num();
}
::google::protobuf::uint32 GnssPntResult::sovled_sat_num() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.sovled_sat_num)
  return sovled_sat_num_;
}
void GnssPntResult::set_sovled_sat_num(::google::protobuf::uint32 value) {
  set_has_sovled_sat_num();
  sovled_sat_num_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.sovled_sat_num)
}

// repeated .apollo.localization.SatDirCosine sat_dir_cosine = 19;
int GnssPntResult::sat_dir_cosine_size() const {
  return sat_dir_cosine_.size();
}
void GnssPntResult::clear_sat_dir_cosine() {
  sat_dir_cosine_.Clear();
}
const ::apollo::localization::SatDirCosine& GnssPntResult::sat_dir_cosine(int index) const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.sat_dir_cosine)
  return sat_dir_cosine_.Get(index);
}
::apollo::localization::SatDirCosine* GnssPntResult::mutable_sat_dir_cosine(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.localization.GnssPntResult.sat_dir_cosine)
  return sat_dir_cosine_.Mutable(index);
}
::apollo::localization::SatDirCosine* GnssPntResult::add_sat_dir_cosine() {
  // @@protoc_insertion_point(field_add:apollo.localization.GnssPntResult.sat_dir_cosine)
  return sat_dir_cosine_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::localization::SatDirCosine >*
GnssPntResult::mutable_sat_dir_cosine() {
  // @@protoc_insertion_point(field_mutable_list:apollo.localization.GnssPntResult.sat_dir_cosine)
  return &sat_dir_cosine_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::localization::SatDirCosine >&
GnssPntResult::sat_dir_cosine() const {
  // @@protoc_insertion_point(field_list:apollo.localization.GnssPntResult.sat_dir_cosine)
  return sat_dir_cosine_;
}

// optional double pdop = 20;
bool GnssPntResult::has_pdop() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void GnssPntResult::set_has_pdop() {
  _has_bits_[0] |= 0x00020000u;
}
void GnssPntResult::clear_has_pdop() {
  _has_bits_[0] &= ~0x00020000u;
}
void GnssPntResult::clear_pdop() {
  pdop_ = 0;
  clear_has_pdop();
}
double GnssPntResult::pdop() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.pdop)
  return pdop_;
}
void GnssPntResult::set_pdop(double value) {
  set_has_pdop();
  pdop_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.pdop)
}

// optional double hdop = 21;
bool GnssPntResult::has_hdop() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void GnssPntResult::set_has_hdop() {
  _has_bits_[0] |= 0x00040000u;
}
void GnssPntResult::clear_has_hdop() {
  _has_bits_[0] &= ~0x00040000u;
}
void GnssPntResult::clear_hdop() {
  hdop_ = 0;
  clear_has_hdop();
}
double GnssPntResult::hdop() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.hdop)
  return hdop_;
}
void GnssPntResult::set_hdop(double value) {
  set_has_hdop();
  hdop_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.hdop)
}

// optional double vdop = 22;
bool GnssPntResult::has_vdop() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void GnssPntResult::set_has_vdop() {
  _has_bits_[0] |= 0x00080000u;
}
void GnssPntResult::clear_has_vdop() {
  _has_bits_[0] &= ~0x00080000u;
}
void GnssPntResult::clear_vdop() {
  vdop_ = 0;
  clear_has_vdop();
}
double GnssPntResult::vdop() const {
  // @@protoc_insertion_point(field_get:apollo.localization.GnssPntResult.vdop)
  return vdop_;
}
void GnssPntResult::set_vdop(double value) {
  set_has_vdop();
  vdop_ = value;
  // @@protoc_insertion_point(field_set:apollo.localization.GnssPntResult.vdop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace localization
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
